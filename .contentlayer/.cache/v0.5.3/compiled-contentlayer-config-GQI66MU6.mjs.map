{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer2/source-files\";\r\nimport * as path from 'path';\r\n\r\nexport const Doc = defineDocumentType(() => ({\r\n  name: \"Doc\",\r\n  filePathPattern: `**/*.mdx`,\r\n  contentType: \"mdx\",\r\n  fields: {\r\n    title: {\r\n      type: \"string\",\r\n      required: true,\r\n    },\r\n    description: {\r\n      type: \"string\",\r\n      required: false,\r\n    },\r\n    published: {\r\n      type: \"boolean\",\r\n      required: false,\r\n      default: true,\r\n    },\r\n    section: {\r\n      type: \"string\",\r\n      required: true,\r\n    },\r\n    order: {\r\n      type: \"number\",\r\n      required: true,\r\n      default: 999,\r\n    }\r\n  },\r\n  computedFields: {\r\n    slug: {\r\n      type: \"string\",\r\n      resolve: (doc) => `/${doc._raw.flattenedPath}`,\r\n    },\r\n    slugAsParams: {\r\n      type: \"string\",\r\n      resolve: (doc) => doc._raw.flattenedPath.split(\"/\").slice(1).join(\"/\"),\r\n    },\r\n    // Add a path segments field to help with hierarchy\r\n    pathSegments: {\r\n      type: \"json\",\r\n      resolve: (doc) => {\r\n        return doc._raw.flattenedPath.split(\"/\").map(segment => ({\r\n          title: segment.replace(/-/g, ' '),\r\n          segment\r\n        }))\r\n      }\r\n    }\r\n  },\r\n}));\r\n\r\nexport default makeSource({\r\n  contentDirPath: path.join(\"src\", \"content\"),\r\n  documentTypes: [Doc],\r\n  disableImportAliasWarning: true,\r\n});\r\n\r\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,YAAY,UAAU;AAEf,IAAM,MAAM,mBAAmB,OAAO;AAAA,EAC3C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK,aAAa;AAAA,IAC9C;AAAA,IACA,cAAc;AAAA,MACZ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,IACvE;AAAA;AAAA,IAEA,cAAc;AAAA,MACZ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ;AAChB,eAAO,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,IAAI,cAAY;AAAA,UACvD,OAAO,QAAQ,QAAQ,MAAM,GAAG;AAAA,UAChC;AAAA,QACF,EAAE;AAAA,MACJ;AAAA,IACF;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAqB,UAAK,OAAO,SAAS;AAAA,EAC1C,eAAe,CAAC,GAAG;AAAA,EACnB,2BAA2B;AAC7B,CAAC;",
  "names": []
}
