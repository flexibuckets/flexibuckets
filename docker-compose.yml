services:
  traefik:
    image: traefik:v2.10
    container_name: flexibuckets_traefik
    restart: always
    environment:
      - SERVER_IP=${SERVER_IP}
      - APP_UID=${APP_UID}
      - DOCKER_GID=${DOCKER_GID}
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/traefik:/etc/traefik:rw
    networks:
      - flexibuckets_network
    command:
      - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.watch=true"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--api.dashboard=true"
      - "--api.insecure=true"

  db:
    image: postgres:16-alpine
    container_name: flexibuckets_postgres
    restart: always
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-flexibuckets}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-flexibuckets}"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    networks:
      - flexibuckets_network

  app:
    image: flexibuckets/flexibuckets:latest
    container_name: flexibuckets_app
    restart: always
    environment:
      - SERVER_IP=${SERVER_IP}
      - DOMAIN=${DOMAIN}
      - NEXTAUTH_URL=https://${DOMAIN}
      - NEXTAUTH_URL_INTERNAL=http://localhost:3000
      - NEXT_PUBLIC_APP_URL=https://${DOMAIN}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - TRAEFIK_DYNAMIC_DIR=/etc/traefik/dynamic
      - APP_UID=${APP_UID}
      - DOCKER_GID=${DOCKER_GID}
      
    env_file: .env
    ports:
      - "3000:3000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/traefik/dynamic:/etc/traefik/dynamic:rw
      - app_data:/app/data
      - next_cache:/app/.next/cache
    
      
    networks:
      - flexibuckets_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app-domain.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.app-domain.entrypoints=web,websecure"
      - "traefik.http.routers.app-domain.service=app-service"
      - "traefik.http.routers.app-domain.tls=true"
      - "traefik.http.routers.app-domain.tls.certresolver=letsencrypt"
      - "traefik.http.routers.app-ip.rule=Host(`${SERVER_IP}`)"
      - "traefik.http.routers.app-ip.entrypoints=web"
      - "traefik.http.routers.app-ip.service=app-service"
      - "traefik.http.services.app-service.loadbalancer.server.port=3000"
    user: "${APP_UID}:${DOCKER_GID}"
    depends_on:
      db:
        condition: service_healthy
      traefik:
        condition: service_started

networks:
  flexibuckets_network:
    driver: bridge

volumes:
  postgres_data:
    name: flexibuckets_postgres_data
  traefik_config:
  app_data:
  next_cache: